{"version":3,"sources":["components/Time.js","App.js","reportWebVitals.js","index.js"],"names":["Time","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentCount","Date","toLocaleTimeString","setState","timeZone","city","intervalId","setInterval","timer","bind","clearInterval","evt","console","log","target","value","ReactDOM","render","react_default","a","createElement","document","getElementById","_this2","name","id","onChange","update","Component","App","className","components_Time","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","src_App"],"mappings":"oPAqDeA,qBAjDX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEC,cAAc,IAAIC,MAAOC,sBAFzBV,uEAKfG,KAAKQ,SAAS,CACVH,cAAc,IAAIC,MAAOC,mBAAmB,QAAS,CAAEE,SAAUT,KAAKJ,MAAMc,qDAIhFV,KAAKW,WAAaC,YAAYZ,KAAKa,MAAMC,KAAKd,MAAO,oDAGrDe,cAAcf,KAAKW,2CAEhBK,GACHC,QAAQC,IAAI,MACZD,QAAQC,IAAIF,EAAIG,OAAOC,OACvBC,IAASC,OAAOC,EAAAC,EAAAC,cAAC9B,EAAD,CAAMe,KAAMM,EAAIG,OAAOC,QAAWM,SAASC,eAAe,0CAErE,IAAAC,EAAA5B,KACL,OACIuB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,UAAQI,KAAK,OAAOC,GAAG,OAAOC,SAAU,SAAAf,GAAG,OAAIY,EAAKI,OAAOhB,KACvDO,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,UAAQL,MAAM,cAAd,cACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,cAAd,cACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,iBAAd,iBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,cAAd,cACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,eAAd,eACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,cAAd,cACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,mBAAd,mBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,uBAAd,uBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,qBAAd,qBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,uBAAd,uBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,wBAAd,wBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,oBAAd,oBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,iBAAd,iBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,gBAAd,gBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,iBAAd,iBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,iBAAd,iBACAG,EAAAC,EAAAC,cAAA,UAAQL,MAAM,iBAAd,kBAEJG,EAAAC,EAAAC,cAAA,mBAAWzB,KAAKI,MAAMC,aAAtB,KAAsCL,KAAKJ,MAAMc,KAAjD,aA7CGuB,cCSJC,MATf,WACE,OACEX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,OAEbZ,EAAAC,EAAAC,cAACW,EAAD,CAAM1B,KAAK,sBCKF2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAA1B,KAAA,UAAqB4B,KAAK,SAAAC,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCAdjB,IAASC,OAEPC,EAAAC,EAAAC,cAACF,EAAAC,EAAMyB,WAAP,KACE1B,EAAAC,EAAAC,cAACyB,EAAD,OAGFxB,SAASC,eAAe,SAM1BU","file":"static/js/main.6aeeef5f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../Time.css'\r\nclass Time extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { currentCount: new Date().toLocaleTimeString() }\r\n    }\r\n    timer() {\r\n        this.setState({\r\n            currentCount: new Date().toLocaleTimeString('en-EN', { timeZone: this.props.city })\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.intervalId = setInterval(this.timer.bind(this), 1000);\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId);\r\n    }\r\n    update(evt) {\r\n        console.log('hi')\r\n        console.log(evt.target.value)\r\n        ReactDOM.render(<Time city={evt.target.value} />, document.getElementById('root'))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label>Pick a timezone: </label>\r\n                <select name='city' id='city' onChange={evt => this.update(evt)}>\r\n                    <option></option>\r\n                    <option value='Asia/Tokyo'>Asia/Tokyo</option>\r\n                    <option value='Asia/Delhi'>Asia/Delhi</option>\r\n                    <option value='Asia/Shanghai'>Asia/Shanghai</option>\r\n                    <option value='Asia/Dhaka'>Asia/Dhaka</option>\r\n                    <option value='Asia/Manila'>Asia/Manila</option>\r\n                    <option value='Asia/Seoul'>Asia/Seoul</option>\r\n                    <option value='America/Toronto'>America/Toronto</option>\r\n                    <option value='America/Los_Angeles'>America/Los_Angeles</option>\r\n                    <option value='America/Sao_Paulo'>America/Sao_Paulo</option>\r\n                    <option value='America/Mexico_City'>America/Mexico_City</option>\r\n                    <option value='America/Buenos_Aires'>America/Buenos_Aires</option>\r\n                    <option value='America/New_York'>America/New_York</option>\r\n                    <option value='Europe/Moscow'>Europe/Moscow</option>\r\n                    <option value='Europe/Paris'>Europe/Paris</option>\r\n                    <option value='Europe/London'>Europe/London</option>\r\n                    <option value='Europe/Madrid'>Europe/Madrid</option>\r\n                    <option value='Europe/Berlin'>Europe/Berlin</option>\r\n                </select>\r\n                <h1>It is {this.state.currentCount} ({this.props.city})</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Time\r\n/*\r\ntokyo Asia/Tokyo\r\ndelhi Asia/Delhi\r\nshanghai Asia/Shanghai\r\ndhaka Asia/Dhaka\r\nmanila Asia/Manila\r\nseoul Asia/Seoul\r\n\r\ntoronto America/Toronto\r\nlos angeles America/Los_Angeles\r\nsao paulo America/Sao_Paulo\r\nmexico city America/Mexico_City\r\nbuenos aires America/Buenos_Aires\r\nnew york America/New_York\r\n\r\nmoscow Europe/Moscow\r\nparis Europe/Paris\r\nlondon Europe/London\r\nmadrid Europe/Madrid\r\nberlin Europe/Berlin\r\n*/","import React from 'react';\nimport './App.css';\nimport Time from './components/Time'\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Time city='America/Toronto' />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}